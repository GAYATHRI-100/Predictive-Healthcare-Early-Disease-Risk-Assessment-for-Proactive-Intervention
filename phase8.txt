# app.py (Flask API)
from flask import Flask, request, jsonify
import joblib
import pandas as pd

app = Flask(__name__)

# Load the trained model
model = joblib.load('heart_disease_risk_model.pkl')

@app.route('/predict_risk', methods=['POST'])
def predict_risk():
    try:
        data = request.get_json(force=True)
        # Assuming data is a dictionary matching your input features
        # e.g., {'age': 50, 'sex': 'M', 'cholesterol': 200, ...}
        input_df = pd.DataFrame([data])

        # Make prediction
        # The pipeline handles preprocessing automatically
        prediction = model.predict(input_df)[0]
        probability = model.predict_proba(input_df)[0][1] # Probability of positive class

        risk_status = "High Risk" if prediction == 1 else "Low Risk"

        return jsonify({
            'prediction': int(prediction), # Convert numpy int to Python int for JSON
            'risk_status': risk_status,
            'probability_of_disease': round(float(probability), 4)
        })

    except Exception as e:
        return jsonify({'error': str(e)}), 400

if __name__ == '__main__':
    app.run(debug=True) # Turn off debug in production